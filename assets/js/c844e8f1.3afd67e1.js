"use strict";(self.webpackChunksemantic_bus_documentation=self.webpackChunksemantic_bus_documentation||[]).push([[2769],{3905:(e,t,n)=>{n.d(t,{Zo:()=>l,kt:()=>f});var r=n(7294);function s(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){s(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,r,s=function(e,t){if(null==e)return{};var n,r,s={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(s[n]=e[n]);return s}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(s[n]=e[n])}return s}var c=r.createContext({}),u=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},l=function(e){var t=u(e.components);return r.createElement(c.Provider,{value:t},e.children)},p="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,s=e.mdxType,a=e.originalType,c=e.parentName,l=i(e,["components","mdxType","originalType","parentName"]),p=u(n),m=s,f=p["".concat(c,".").concat(m)]||p[m]||d[m]||a;return n?r.createElement(f,o(o({ref:t},l),{},{components:n})):r.createElement(f,o({ref:t},l))}));function f(e,t){var n=arguments,s=t&&t.mdxType;if("string"==typeof e||s){var a=n.length,o=new Array(a);o[0]=m;var i={};for(var c in t)hasOwnProperty.call(t,c)&&(i[c]=t[c]);i.originalType=e,i[p]="string"==typeof e?e:s,o[1]=i;for(var u=2;u<a;u++)o[u]=n[u];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},7973:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>o,default:()=>d,frontMatter:()=>a,metadata:()=>i,toc:()=>u});var r=n(7462),s=(n(7294),n(3905));const a={sidebar_position:4,title:"Cr\xe9er un composant",tags:["bus s\xe9mantique","technique"]},o="Comment cr\xe9er un composant dans le Bus S\xe9mantique?",i={unversionedId:"technique/creer_composant",id:"technique/creer_composant",title:"Cr\xe9er un composant",description:"Cette page est encore en cours de construction.",source:"@site/docs/technique/creer_composant.md",sourceDirName:"technique",slug:"/technique/creer_composant",permalink:"/semantic-bus-documentation/docs/technique/creer_composant",draft:!1,tags:[{label:"bus s\xe9mantique",permalink:"/semantic-bus-documentation/docs/tags/bus-semantique"},{label:"technique",permalink:"/semantic-bus-documentation/docs/tags/technique"}],version:"current",sidebarPosition:4,frontMatter:{sidebar_position:4,title:"Cr\xe9er un composant",tags:["bus s\xe9mantique","technique"]},sidebar:"tutorialSidebar",previous:{title:"Big Data",permalink:"/semantic-bus-documentation/docs/technique/bigdata"}},c={},u=[],l={toc:u},p="wrapper";function d(e){let{components:t,...a}=e;return(0,s.kt)(p,(0,r.Z)({},l,a,{components:t,mdxType:"MDXLayout"}),(0,s.kt)("h1",{id:"comment-cr\xe9er-un-composant-dans-le-bus-s\xe9mantique"},"Comment cr\xe9er un composant dans le Bus S\xe9mantique?"),(0,s.kt)("admonition",{type:"caution"},(0,s.kt)("p",{parentName:"admonition"},"Cette page est encore en cours de construction.")),(0,s.kt)("p",null,"Les composants sont cr\xe9\xe9s gr\xe2ce \xe0 diff\xe9rents lignes de code et fichier cr\xe9\xe9s dans les parties main et engine (moteur du bus) du Bus S\xe9mantique."),(0,s.kt)("p",null,'Les fichiers servant \xe0 "afficher" le composant dans le bus sont situ\xe9s dans la partie main, \xe0 "../main/client/static/tag/editorComponents/{TYPE DE VOTRE COMPOSANT}/{NOM DE VOTRE COMPOSANT}.tag".\nLe nom du composant s\'\xe9crit de la sorte "split-editor" ("nomducomposant-editor").\nIl existe diff\xe9rents dossiers permettant de classer votre composant en fonction de ses utilit\xe9s. Le dossier "bdd" repr\xe9sente par exemple les composants de base de donn\xe9es (requ\xeatage, cr\xe9ation etc.).'),(0,s.kt)("p",null,(0,s.kt)("img",{alt:"components-type",src:n(4993).Z,width:"446",height:"346"})),(0,s.kt)("p",null,"Ce sont des fichiers .tag, on y retrouve le code html du composant ainsi qu'une partie de code js permettant de g\xe9rer les mises \xe0 jour des donn\xe9es avec le front.\nIl faudra customiser le composant en fonction de ce qui est souhait\xe9 graphiquement (checkbox, propri\xe9t\xe9s \xe0 entrer..) ainsi que compl\xe9ter le code riot js associ\xe9."),(0,s.kt)("p",null,"Structure d'un fichier graphique .tag"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-html"},'\x3c!-- bouton aide --\x3e\n  <div class="contenaireH" style="margin-left:97%">\n    <a href="https://github.com/assemblee-virtuelle/Semantic-Bus/wiki/Composant:----CLASSNAME---" target="_blank"><img src="./image/help.png" alt="Aide" width="25px" height="25px"></a>\n  </div>\n \x3c!-- Titre du composant --\x3e\n  <div class="contenaireV title-component">{data.type}</div>\n  <div>\n    <div class="bar"/>\n  </div>\n  \x3c!-- Description du composant --\x3e\n  <div class="title-description-component">{data.description}</div>\n  <div>\n    <div class="bar"/>\n  </div>\n  \x3c!-- Customisation du composant ci-dessous --\x3e\n\n<script>\n  this.updateData=function(dataToUpdate){\n    this.data=dataToUpdate;\n    this.update();\n  }.bind(this);\n\n  this.on(\'mount\', function () {\n    RiotControl.on(\'item_current_changed\',this.updateData);\n  });\n  this.on(\'unmount\', function () {\n    RiotControl.off(\'item_current_changed\',this.updateData);\n  });\n<\/script>\n')),(0,s.kt)("p",null,'Il y a ensuite les fichiers permettant de construire les classes qui serviront lors de l\'affichage des composants.\nCes derniers sont situ\xe9s \xe0 "../main/server/workspaceComponentInitialize/{NOM DE CLASSE}.js".\nIci les noms de classe sont de la forme "split.js" "{NOM DU COMPOSANT}.js".'),(0,s.kt)("p",null,'Il faudra bien \xe9videmment changer la description du composant, son logo ("default.svg") ainsi que les fichiers .tag en fonction de l\'utilit\xe9 du composant.'),(0,s.kt)("p",null,"Structure d'un fichier de classe "),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-js"},"'use strict'\nclass ---CLASSNAME--- {\n  constructor () {\n    this.type = '---CLASSNAME---'\n    this.description = 'Description du composant \xe0 changer'\n    this.editor = '---EDITORNAME---'\n    this.graphIcon = 'default.svg'\n    this.tags = [\n      'http://semantic-bus.org/data/tags/middleComponents',\n      'http://semantic-bus.org/data/tags/middleQueryingComponents'\n    ]\n  }\n}\n\nmodule.exports = new ---CLASSNAME---()\n")),(0,s.kt)("p",null,'Il reste ensuite \xe0 coder le composant. Que va-t-il calculer?\nCette partie se fait dans "./engine/workspaceComponentExecutor/{NOM DU COMPOSANT}.js".\nIci les noms de classe sont de la forme "split.js" "{NOM DU COMPOSANT}.js".'),(0,s.kt)("p",null,"Structure du code js du composant"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-js"},"'use strict';\nclass ---CLASSNAME--- {\n    constructor() {}\n    pull(data, flowData, pullParams) {\n        return new Promise((resolve, reject) => {\n            try {\n                var result = []\n\n                resolve({\n                    data: result\n                })\n            } catch (e) {\n                reject(e)\n            }\n        })\n    }\n}\nmodule.exports = new ---CLASSNAME---()\n")),(0,s.kt)("p",null,"Afin de faire les liens entre ces 3 fichiers/classes, il faudra rajouter des lignes de code dans ces fichiers (en g\xe9n\xe9ral \xe0 la fin du fichier) : "),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},"main/server/services/technicalComponentDirectory.js",(0,s.kt)("pre",{parentName:"li"},(0,s.kt)("code",{parentName:"pre",className:"language-js"},"{NOM DE CLASSE}: require('../workspaceComponentInitialize/{NOM DE CLASSE}.js'),\n"))),(0,s.kt)("li",{parentName:"ul"},"engine/services/technicalComponentDirectory.js",(0,s.kt)("pre",{parentName:"li"},(0,s.kt)("code",{parentName:"pre",className:"language-js"},"{NOM DE CLASSE}: require('../workspaceComponentExecutor/{NOM DE CLASSE}.js'),\n"))),(0,s.kt)("li",{parentName:"ul"},"Dans la partie de configuration (h\xe9berg\xe9 en ligne ou dans le fichier config.json ou config.local.json)",(0,s.kt)("pre",{parentName:"li"},(0,s.kt)("code",{parentName:"pre",className:"language-json"},'"{NOM DE CLASSE}":{"price":40},\n')))))}d.isMDXComponent=!0},4993:(e,t,n)=>{n.d(t,{Z:()=>r});const r=n.p+"assets/images/type-components-99d31fc8f95db61d7dc0c9890be9ac32.png"}}]);